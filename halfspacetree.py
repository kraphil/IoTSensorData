# -*- coding: utf-8 -*-
"""HalfSpaceTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A_sXZwKucoX7O20elnVs6dfXIqnQIhW-
"""

!pip install river

!pip install -U numpy

from river import datasets
from river import metrics
from river import preprocessing
from river import anomaly
import pandas as pd
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()

dataframe = pd.read_csv('experiment_01.csv')
#dataframe = dataframe.drop('Timestamp', 1)
dataframe = dataframe.drop('Machining_Process', 1)
label_column = dataframe['Label']
scaled_data = scaler.fit_transform(dataframe[dataframe.columns.difference(['Label'])])
data = pd.DataFrame(data = scaled_data, columns = dataframe.columns.difference(['Label']))
data = data.join(label_column)
data

corrs = dataframe.corr()['Label'].abs()
columns = corrs[corrs > .1].index
corrs = corrs.filter(columns)
corrs

data = data[columns]
data

dataset = [(x, x.pop("Label")) for x in data.to_dict(orient="records")]

hst = anomaly.HalfSpaceTrees(
     n_trees=12,
     height=10,
     window_size=100,
     seed=42)

# Commented out IPython magic to ensure Python compatibility.
# %time

model = hst
auc = metrics.ROCAUC()
for x, y in dataset:
     score = model.score_one(x)
     model = model.learn_one(x)
     auc = auc.update(y, score)


auc

